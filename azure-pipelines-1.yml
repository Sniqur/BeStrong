trigger:
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main

variables:
  - group: AzCred

stages:

# Continuous Integration (CI) Stage
- stage: CI
  displayName: "Terraform CI Pipeline"
  jobs:
  - job: terraform_ci
    displayName: "CI Job - Terraform Init, Validate, and Plan"
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - checkout: self

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.x'

      - task: Bash@3
        displayName: "Install Azure CLI"
        inputs:
          targetType: 'inline'
          script: |
            curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
            az --version

      - task: Bash@3
        displayName: "Install Terraform"
        inputs:
          targetType: 'inline'
          script: |
            T_VERSION="1.9.8"
            curl -O https://releases.hashicorp.com/terraform/${T_VERSION}/terraform_${T_VERSION}_linux_amd64.zip
            unzip terraform_${T_VERSION}_linux_amd64.zip
            sudo mv terraform /usr/local/bin/
            terraform -version

      - task: Bash@3
        displayName: "Azure Login"
        inputs:
          targetType: 'inline'
          script: |
            az login --service-principal -u $(ARM_CLIENT_ID) -p $(ARM_CLIENT_SECRET) --tenant $(ARM_TENANT_ID)
            az account set --subscription $(ARM_SUBSCRIPTION_ID)

      - task: Bash@3
        displayName: "Terraform Init"
        inputs:
          targetType: 'inline'
          script: |
            terraform init -lock=false

      - task: Bash@3
        displayName: "Terraform Validate"
        inputs:
          targetType: 'inline'
          script: |
            terraform validate -no-color

      - task: Bash@3
        displayName: "Terraform Plan"
        inputs:
          targetType: 'inline'
          script: |
            terraform plan -no-color -input=false -lock=false
        env:
          TF_VAR_sql_admin_user: $(TF_VAR_sql_admin_user)
          TF_VAR_sql_admin_password: $(TF_VAR_sql_admin_password)

# Continuous Deployment (CD) Stage - Triggered only after CI success and requires manual approval
- stage: CD
  displayName: "Terraform CD Pipeline"
  dependsOn: CI
  condition: succeeded() # Triggered only if CI succeeds
  jobs:
  - job: terraform_cd
    displayName: "CD Job - Terraform Apply"
    pool:
      vmImage: 'ubuntu-latest'
      environment: 'Prod'
    steps:
      - checkout: self

      - task: Bash@3
        displayName: "Azure Login"
        inputs:
          targetType: 'inline'
          script: |
            az login --service-principal -u $(ARM_CLIENT_ID) -p $(ARM_CLIENT_SECRET) --tenant $(ARM_TENANT_ID)
            az account set --subscription $(ARM_SUBSCRIPTION_ID)
      - task: Bash@3      
        displayName: "Run Terraform Init, Validate, and Plan"
        inputs:
          targetType: 'inline'
          script: |
                    terraform init -reconfigure -lock=false
                    terraform validate
                    terraform plan -out=tfplan.out -lock=false
        env:
            TF_VAR_sql_admin_user: $(TF_VAR_sql_admin_user)
            TF_VAR_sql_admin_password: $(TF_VAR_sql_admin_password)      
      - task: Bash@3
        displayName: "Terraform Apply"
        inputs:
          targetType: 'inline'
          script: |
            terraform apply  --auto-approve -lock=false tfplan.out
        env:
          TF_VAR_sql_admin_user: $(TF_VAR_sql_admin_user)
          TF_VAR_sql_admin_password: $(TF_VAR_sql_admin_password)
        # Requires manual approval before execution
          approval: Manual
